name: Rust Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache target directory
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Run tests
      id: tests
      run: |
        echo "::group::Running tests"
        echo "::notice title=Running Tests::Starting Rust tests"
        
        # Run tests and capture output
        cargo test 2>&1 | tee test-output.txt
        TEST_EXIT_CODE=$?
        
        # Parse test results from output
        SUCCESS_COUNT=$(grep -o 'test result: ok\. [0-9]* passed' test-output.txt | sed 's/test result: ok\. \([0-9]*\) passed/\1/' | head -1 || echo "0")
        FAIL_COUNT=$(grep -o '[0-9]* failed' test-output.txt | sed 's/\([0-9]*\) failed/\1/' | head -1 || echo "0")
        IGNORE_COUNT=$(grep -o '[0-9]* ignored' test-output.txt | sed 's/\([0-9]*\) ignored/\1/' | head -1 || echo "0")

        # Add test summary to job summary
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Passed: $SUCCESS_COUNT" >> $GITHUB_STEP_SUMMARY
        echo "- ❌ Failed: $FAIL_COUNT" >> $GITHUB_STEP_SUMMARY
        echo "- ⏭️ Ignored: $IGNORE_COUNT" >> $GITHUB_STEP_SUMMARY

        # If tests failed, show output
        if [ $FAIL_COUNT -gt 0 ]; then
          echo "### Failed Tests" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          grep -A5 -B5 'FAILED' test-output.txt || echo "No detailed failure info available" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi

        echo "::endgroup::"
        exit $TEST_EXIT_CODE


    - name: Run linter (clippy)
      run: |
        echo "::group::Running clippy"
        cargo clippy --all-targets --all-features -- -D warnings
        echo "::endgroup::"

    - name: Check formatting
      run: |
        echo "::group::Checking code formatting"
        cargo fmt --all -- --check
        echo "::endgroup::"

    - name: Generate test summary
      if: always()
      run: |
        echo "## Overall Test Summary" >> $GITHUB_STEP_SUMMARY

        if [ -f test-output.txt ]; then
          TOTAL_TESTS=$(grep -o 'test result: ok\. [0-9]* passed' test-output.txt | sed 's/test result: ok\. \([0-9]*\) passed/\1/' | head -1 || echo "0")
          TOTAL_FAILED=$(grep -o '[0-9]* failed' test-output.txt | sed 's/\([0-9]*\) failed/\1/' | head -1 || echo "0")
          TOTAL_IGNORED=$(grep -o '[0-9]* ignored' test-output.txt | sed 's/\([0-9]*\) ignored/\1/' | head -1 || echo "0")

          echo "- Total tests: $TOTAL_TESTS" >> $GITHUB_STEP_SUMMARY
          echo "- Total failed: $TOTAL_FAILED" >> $GITHUB_STEP_SUMMARY
          echo "- Total ignored: $TOTAL_IGNORED" >> $GITHUB_STEP_SUMMARY

          if [ $TOTAL_FAILED -eq 0 ]; then
            echo "::notice title=Tests Summary::✅ All tests passed: $TOTAL_TESTS tests run, $TOTAL_IGNORED ignored"
          else
            echo "::error title=Tests Summary::❌ Some tests failed: $TOTAL_FAILED failed out of $TOTAL_TESTS tests"
          fi
        else
          echo "Test result files not found. Unable to generate summary." >> $GITHUB_STEP_SUMMARY
        fi

        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Coverage" >> $GITHUB_STEP_SUMMARY
        echo "- **Coverage:** Not configured (coverage reporting disabled)" >> $GITHUB_STEP_SUMMARY
        echo "- **Status:** ℹ️ SKIPPED" >> $GITHUB_STEP_SUMMARY
